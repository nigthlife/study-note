package com.mj;

import java.util.Arrays;

import com.mj.sort.BubbleSort3;
import com.mj.sort.HeapSort;
import com.mj.sort.InsertionSort1;
import com.mj.sort.InsertionSort2;
import com.mj.sort.InsertionSort3;
import com.mj.sort.MergeSort;
import com.mj.sort.QuickSort;
import com.mj.sort.SelectionSort;
import com.mj.sort.Sort;
import com.mj.tools.Asserts;
import com.mj.tools.Integers;

@SuppressWarnings({ "rawtypes", "unchecked" })
public class Main {
	public static void main(String[] args) {
		
//		int[] array1 = {2, 4, 8, 8, 8, 12, 14};
//		Asserts.test(BinarySearch.search(array1, 5)==2);
//		Asserts.test(BinarySearch.search(array1, 1)==0);
//		Asserts.test(BinarySearch.search(array1, 15)==7);
//		Asserts.test(BinarySearch.search(array1, 8)==5);
		
//		Integer[] array = Integers.random(10000, 1, 10000);	
		Integer[] array = Integers.random(20000, 1, 1W);	
		testSorts(array, 
				//new BubbleSort3(),		// 冒泡排序-优化2
				new HeapSort(), 		// 堆排序
				//new SelectionSort(),	// 选择排序
				//new InsertionSort1(),   // 插入排序
				//new InsertionSort2(), 	// 插入排序-挪动优化
				new InsertionSort3(),	// 插入排序-二分查找优化
				new MergeSort(),		// 归并排序
				new QuickSort()			// 快速排序
				);
	}
	
	static void testSorts(Integer[] array, Sort... sorts) {
		for (Sort sort : sorts) {
			Integer[] newArray = Integers.copy(array);
			sort.sort(newArray);
			Asserts.test(Integers.isAscOrder(newArray));
		}
		Arrays.sort(sorts);
		
		for (Sort sort : sorts) {
			System.out.println(sort);
		}
	}

}
