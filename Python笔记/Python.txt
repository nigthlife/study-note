				
				  第一课
（1） print() 的作用是什么？
	print() 会在输出窗口中显示一些文本（在这一讲中，输出窗口就是IDLE shell窗口

（2）IDLE 是什么？
	IDLE是一个Python Shell，shell的意思就是“外壳”，基本上来说，就是一个通过	键入文本与程序交互的途径！

（3）
	在 Python 中不能把两个完全不同的东西加在一起，比如说数字和文本

（4） 如果我需要在一个字符串中嵌入一个双引号，正确的做法是
	你有两个选择：可以利用反斜杠（\）对双引号转义：\"，或者用单引号引起这个字		符串。例如：' I l"o"ve fishc.com '。

（5）动手试试直接输入 >>>5+8 与输入 >>>print(5+8) 有何不同
	直接输入是将结果及类型打印到屏幕上，而print是将结果打印到屏幕上，


				第二课
（1）0. 什么是BIF？
	BIF 就是 Built-in Functions，内置函数

（2）1. 用课堂上小甲鱼教的方法数一数 Python3 提供了多少个 BIF
	68
dir(__builtins__)

（3）
	语言的话，如果 if( c == 1 ) 写成 if( c = 1 )，程序就完全不按程序员原本的目的去	执行，但在 Python 这里，不好意思，行不通，语法错误！Python 不允许 if 条件		中赋值，所以 if c = 1: 会报错！
	小甲鱼觉得这种做法可以非常有效的防止程序员因为打炮、熬夜等问题导致粗心的 	BUG ，并且这类 BUG 杀伤力都巨大！


				第三课

（1）如果非要在原始字符串结尾输入反斜杠，可以如何灵活处理?
	>>>str = r'C:\Program Files\FishC\Good''\\'

（2）str()和print()都是内置函数，但Python貌似不介意我们对内置函数进行赋值操作
	
（3）input（）从键盘输入.
（4）一个语句可以分成多行书写，可以使用反斜杠（\）或者括号分解成几行
	如：>>> 3 > 4 and \
  		1 < 2
	如：>>> ( 3 > 4 and 
 		 1 < 2 )


				第四课

（1）and的操作符 1 and 3 只要没有0，这条语句就为真，为真返回数值最大的那一个
	为假返回0 


		第六次 	Python数据类型
（）
     判断字符串内置判断数字的三个函数
     isdigit()      	如果所有字符都是数字，并且至少有一个字符，则返回true
     isnumeric()	如果只有数字字符，则返回true，否则为false
     isdecimal()	如果只有十进制字符，则返回true，否则false

（1）判断输入的是什么类型判断内置函数
	a = '520'
	type(a):
	返回：<class 'str'>
	type(5.2)
	<class'float'>
	type(ture)
	<class 'bool'>	

	a = '小甲鱼'
	isinstance(a,str)	//判断这个是a是否是字符型
	true	//是的话返回true否则返回false


			第七次	常用操作符
（1）not 是取相反
	not true 	
	返回：false
	not false
	返回：true

			第九次  循环
（1）elif 等于else if
（2）assert 断言（自爆）
	一、 般来说我们可以用Ta再程序中置入检查点，当
	需要确保程序中的某个条件一定为真才能让程序
	正常工作的话，
	assert关键字就非常有用了。

（3）for 变量名 in 变量名

（4）range（【strat】stop 【，step = 1】）
	len()求字符串长度
	总共有三个参数，其中中括号是可选参数
	stop 就是停止的位置
	strat 就是开始的位置，如果没有就是默认从0开始
	step = 1 表示第三个参数的默认值是1 也就是每次增加的数
	只有一个参数默认从0开始

	如果start是1，stop是5 的话，就会输出1234不包含5
（5）list 列表显示，也就是数组

			第十一次 列表

（1）	append（需要传入的数据）
	使用方法：变量名点append（）【这个方法一次只能传入一个数据】
	extend（[ ]）可以一次传入多个数据，但是得要用中括号括起来
	添加的数据都默认放在最后一个位置上，也就是自动追加到末尾
	insert（需要放的位置，传入的数据）
	insert有俩个参数，第一个参数代表在列表的位置，第二个参数表示在第一个参数
	位置插入一个元素

			第十二次 列表
（1）从列表删除元素
	remove（） 这种方法只能在你知道这个数组内容使用，
	输出的值不正确无法删除

（2）del number【1】 删除number数组第二个元素

（3）pop()  从列表中取最后一个元素并返回给你，
	有也就是把删除的内容返回给你看
	括号中也可以输出需要删除数据的值

（4）列表分片
	number【1:3】表示从下标为1开始分，到下标为3结束，
	但不包含下标为3的值，也就是3-1等于2个元素，形成原列表	拷贝
	原列表并没有改变
	前面不写开始位置就默认从第一个元素开始，

			第十三次 操作符
（1）数组的比较：
	从下标为0的元素开始比较，只比较第一个元素

（2）数组可以进行拼接，使用+号进行拼接俩边都必须为同类型

（3）成员练习操作符
	in操作：只能判断列表，不能判断列表里面列表的元素
	除非引入list【比较的数字位置】也可以通过二维数组的方式判断
	123 in list【1】【2】

（4）count：计算一个数出现的次数
	如：列表.count（123）
         	index：返回这个参数在列表的位置
	如：列表名.index（123）
	如：列表名.index （123，2,，7）
	表示从第二个元素开始到第七个元素结束，求123在2到7中的	位置

（5）reverse：翻转函数
	使用方法：列表名.reverse（），括号里不需要参数
（6）sort：从小到大排序（规定排序）
	使用方法：列表名.sort（），括号内不需要参数
	可以搭配reverse进行从大到小排序
	如：列表名.sort（reverse = true）为true就进行从大到小排序



			内置函数

（1）all(),如果集合中所有函数不为空，返回true，否则返回false

（2）any(),如果集合中有一项元素是true，则返回true，否则返回false

（3）bool(),返回一个布尔值，只要不为0都返回true，负数也返回true

（4）callable(),判断对象参数是否可被调用
	可被调用的是指对象能否使用()括号的方法调用
	可被调用返回true ，否则返回false
（5）


			字符串方法

（1）capitalize(),把字符串的第一个字符改为大写
（2）casefold(),把整个字符串的所有字符改为小写
（3）center(width),
	将字符串居中，并使用空格填充至width的新字符串
	width是填充的长度，填1就是加一个空格
（4）count(sub[,start[,end]]),返回sub在字符串里边出现的次数
	start和end 参数表范围，可选
（5）endswith(sub[,start[,end]]),检查字符串是否以sub子字符结束
	如果是返回true，否则返回false，
	start和end 参数表范围，可选
（6）expantabs(默认8个空格),把字符串的tab符号(\t)转换为空格
	如果不指定参数，默认的空格数是tabsize = 8

（7）find(sub[,start[,end]]),检查sub是否在字符串中
	如果在返回索引值，也就是下标，否则返回-1
（8）rfind(sub[, start[, end]])
	类似于 find() 方法，不过是从右边开始查找
（9）index(sub[,start[,end]]),跟find方法一样
	不过当sub不在string中会产生异常
（10）rindex(sub[, start[, end]])
	类似于 index() 方法，不过是从右边开始。

（11）isalnum(),如果字符串至少有一个字符并且所有字符都是字母或
	数字则返回True,否则返回false
（12）isalpha(),如果字符串至少有一个字符并且所有字符都是
	字母则返回true，否则返回false

（13）islower(),如果字符串中至少包含一个区分大小写字符，并且这	
	些字符第是小写，则返回true，否则返回false
（14）isupper(),如果字符串中至少包含一个区分大小写字符，并且这	
	些字符第是大写，则返回true，否则返回false
（15）isspace(),如果字符串中只包含空格，则返回true，否则false
（16）istitle(),如果字符串是标题大写，一个单词开头大写其余都是		小写，则返回true，否则返回false
（17）isnumeric(),如果字符串中只包含数字字符，则返回true，否则
	false
（18）join(sub),以字符串作为分隔符，插入到sub中的所有字符之间
	如：str = "abc"
	    str.join("123")
	    str就成了：1abc2abc3abc
（19）ljust(width),返回一个左对齐的字符串，并使用空格填充长度
（20）lower(),转换字符串中所有大写字符为小写
（21）lstrip(),去掉字符串左边所有空格
（22）partition(sub),
	找到字符串sub，把字符串分成一个三元组
	如果字符串中不包含sub则返回（'原字符串',","）
（23）rpartition(sub)
	类似于 partition() 方法，不过是从右边开始查找。


（24）replace(old, new[, count])
	把字符串中的 old 子字符串替换成 new 子字符串，如果 	count 指定，则替换不超过 count 次

（25）isdecimal(),如果字符串只包含十进制数字则返回true，否则
	返回false

（26）isdigit(),如果字符串只包含数字则返回true，否则返回false
（27）rjust(width)
	返回一个右对齐的字符串，并使用空格填充至长度为 width 		的新字符串
（28）rstrip()
	删除字符串末尾的空格
（29）split(sep=None, maxsplit=-1)
	不带参数默认是以空格为分隔符切片字符串，如果 maxsplit 	参数有设置，则仅分隔 maxsplit 个子字符串，返回切片后的	子字符串拼接的列表
（30）splitlines(([keepends]))
	在输出结果里是否去掉换行符，默认为 False，不包含换行符	；如果为 True，则保留换行符
（31）startswith(prefix[, start[, end]])
	检查字符串是否以 prefix 开头，是则返回 True，否则返回 	False。start 和 end 参数可以指定范围检查，可选
（32）strip([chars])
	删除字符串前边和后边所有的空格，chars 参数可以定制删除	的字符，可选
（33）swapcase(),翻转字符串中的大小写
（34）upper()转换字符串中的所有小写字符为大写
（35）title(),标题化（所有的单词都是以大写开始，其余字母均小写）的字符串
（36）translate(table)
	根据 table 的规则（可以由 str.maketrans('a', 'b') 定制	）转换字符串中的字符
（37）zfill(width)
	返回长度为 width 的字符串，原字符串右对齐，前边用 0 填	充
	



